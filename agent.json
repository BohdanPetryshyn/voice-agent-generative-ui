{
  "conversation_config": {
    "agent": {
      "prompt": {
        "prompt": "You are a helpful assistant. You help the client to troubleshot problem with their flight. You always need to get the flight number and the email from the user. Always repeat the information you collected from the user. Feel free to get any additional information from the user. Use form to collect data that is easier to type than to speak.\n\nTo get information from the user, use the combination of `show_form`, `get_form_state`, and `close_form` tools. \n\nFirst, show the form with `show_form` and ask the user to tell you when they finish filling out the form. You have to provide plain HTML content and CSS styles for the form. They will be used to render the form like this:\n\n```js\nconst form = document.createElement(\"form\");\nform.id = \"vagu-form\";\nform.innerHTML = `\n  <style>${formCss}</style>\n  ${formHtml}\n`\n```\n\nThe user can ask you questions about the form content, assist them as needed. At any point, you can use the `get_form_state` tool to get the current state of the user input.\n\nWhen the user say that they finished filling out the form, use `get_form_state` one more time to check if the input is valid. If not - ask the user to correct the mistakes. If the input is valid, use `close_form` to close the form. It's important to close the form when it's no longer needed.\n\nYou can use `close_form` at any point in time if submitting the form no longer makes sense. You can also replace the currently active form with another `show_form` tool call. Keep in mind that this will close the currently active form and the user will loose their progress. Only do this if the currently active form does no longer make sense.\n\nBE SUPER CONCISE!!!",
        "llm": "claude-3-5-sonnet",
        "temperature": 0.5,
        "max_tokens": -1,
        "tools": [
          {
            "type": "client",
            "name": "get_form_state",
            "description": "Returns state of the currently active form",
            "parameters": null,
            "expects_response": true,
            "response_timeout_secs": 1
          },
          {
            "type": "client",
            "name": "close_form",
            "description": "Closes the currently active form",
            "parameters": null,
            "expects_response": false,
            "response_timeout_secs": null
          },
          {
            "type": "client",
            "name": "show_form",
            "description": "Shows user a form with one or multiple input fields. Only one form can be shown at a time",
            "parameters": {
              "type": "object",
              "properties": {
                "form_css": {
                  "type": "string",
                  "description": "CSS styles for the form",
                  "dynamic_variable": ""
                },
                "form_html": {
                  "type": "string",
                  "description": "HTML content of the form",
                  "dynamic_variable": ""
                }
              },
              "required": [
                "form_html",
                "form_css"
              ],
              "description": ""
            },
            "expects_response": false,
            "response_timeout_secs": null
          },
          {
            "type": "client",
            "name": "promptUser",
            "description": "Shows user a form with one or multiple fields to get any information from them",
            "parameters": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The logical identifier of the form in kebab case",
                  "dynamic_variable": ""
                },
                "formCss": {
                  "type": "string",
                  "description": "Css styles fro ",
                  "dynamic_variable": ""
                },
                "formHtml": {
                  "type": "string",
                  "description": "Html content of the form",
                  "dynamic_variable": ""
                }
              },
              "required": [
                "formHtml",
                "formCss",
                "id"
              ],
              "description": ""
            },
            "expects_response": true,
            "response_timeout_secs": 30
          },
          {
            "type": "system",
            "name": "end_call",
            "description": ""
          }
        ],
        "tool_ids": [
          "0xLZkBPw3nVC9McqSEgm",
          "OXeF97XRo2AvGdfESoAv",
          "xvM5eN7B3IYOhk0HEpwQ",
          "MH3vZasV2uTJeeXBIzjH",
          "Te6KA63uxGB5mjbLH9zz"
        ],
        "knowledge_base": [],
        "knowledge_base_document_ids": [],
        "custom_llm": null
      },
      "first_message": "Hi!",
      "language": "en",
      "dynamic_variables": {
        "dynamic_variable_placeholders": {}
      }
    },
    "asr": {
      "quality": "high",
      "provider": "elevenlabs",
      "user_input_audio_format": "pcm_16000",
      "keywords": []
    },
    "turn": {
      "turn_timeout": 7,
      "mode": "turn"
    },
    "tts": {
      "model_id": "eleven_flash_v2",
      "voice_id": "cjVigY5qzO86Huf0OWal",
      "agent_output_audio_format": "pcm_16000",
      "optimize_streaming_latency": 3,
      "stability": 0.5,
      "similarity_boost": 0.8,
      "pronunciation_dictionary_locators": []
    },
    "conversation": {
      "max_duration_seconds": 300,
      "client_events": [
        "audio",
        "interruption",
        "user_transcript",
        "agent_response",
        "agent_response_correction"
      ]
    },
    "language_presets": {}
  },
  "platform_settings": {
    "auth": {
      "enable_auth": false,
      "allowlist": [],
      "shareable_token": null
    },
    "evaluation": {
      "criteria": []
    },
    "widget": {
      "variant": "full",
      "expandable": "never",
      "avatar": {
        "type": "orb",
        "color_1": "#2792DC",
        "color_2": "#9CE6E6"
      },
      "feedback_mode": "during",
      "bg_color": "#ffffff",
      "text_color": "#000000",
      "btn_color": "#000000",
      "btn_text_color": "#ffffff",
      "border_color": "#e1e1e1",
      "focus_color": "#000000",
      "border_radius": null,
      "btn_radius": null,
      "action_text": null,
      "start_call_text": null,
      "end_call_text": null,
      "expand_text": null,
      "listening_text": null,
      "speaking_text": null,
      "shareable_page_text": null,
      "terms_text": "#### Terms and conditions\n\nBy clicking \"Agree,\" and each time I interact with this AI agent, I consent to the recording, storage, and sharing of my communications with third-party service providers, and as described in the Privacy Policy.\nIf you do not wish to have your conversations recorded, please refrain from using this service.",
      "terms_html": "<h4>Terms and conditions</h4>\n<p>By clicking &quot;Agree,&quot; and each time I interact with this AI agent, I consent to the recording, storage, and sharing of my communications with third-party service providers, and as described in the Privacy Policy.\nIf you do not wish to have your conversations recorded, please refrain from using this service.</p>\n",
      "terms_key": null,
      "show_avatar_when_collapsed": true,
      "disable_banner": false,
      "language_selector": false,
      "custom_avatar_path": null
    },
    "data_collection": {},
    "overrides": {
      "conversation_config_override": {
        "agent": {
          "prompt": {
            "prompt": false
          },
          "first_message": false,
          "language": false
        },
        "tts": {
          "voice_id": false
        }
      },
      "custom_llm_extra_body": false,
      "enable_conversation_initiation_client_data_from_webhook": false
    },
    "call_limits": {
      "agent_concurrency_limit": -1,
      "daily_limit": 100000
    },
    "ban": null,
    "privacy": {
      "record_voice": true,
      "retention_days": 730,
      "delete_transcript_and_pii": true,
      "delete_audio": true,
      "apply_to_existing_conversations": false
    },
    "safety": {
      "is_blocked_ivc": false,
      "is_blocked_non_ivc": false
    }
  },
  "name": "New agent"
}